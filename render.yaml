services:
  - type: web
    name: bambu-lab-test
    env: python
    buildCommand: |
      set -e
      
      echo "🔧 Installing Python dependencies..."
      pip install -r requirements.txt
      
      echo "📥 Downloading SuperSlicer..."
      wget -q --show-progress https://github.com/supermerill/SuperSlicer/releases/download/2.7.61.1/SuperSlicer-2.7.61.1-linux.tar.xz
      
      echo "📦 Extracting SuperSlicer..."
      tar -xf SuperSlicer-2.7.61.1-linux.tar.xz
      
      echo "📁 Creating installation directory..."
      mkdir -p /opt/render/superslicer
      
      echo "🔍 Looking for SuperSlicer executable..."
      FOUND=false
      
      # Check multiple possible locations in extracted files
      if [ -f "SuperSlicer-2.7.61.1-linux/superslicer_console" ]; then
        echo "✅ Found superslicer_console in root directory"
        cp SuperSlicer-2.7.61.1-linux/superslicer_console /opt/render/superslicer/superslicer_console
        FOUND=true
      elif [ -f "SuperSlicer-2.7.61.1-linux/bin/superslicer_console" ]; then
        echo "✅ Found superslicer_console in bin directory"  
        cp SuperSlicer-2.7.61.1-linux/bin/superslicer_console /opt/render/superslicer/superslicer_console
        FOUND=true
      elif [ -f "SuperSlicer-2.7.61.1-linux/SuperSlicer" ]; then
        echo "✅ Found SuperSlicer GUI executable, copying as console"
        cp SuperSlicer-2.7.61.1-linux/SuperSlicer /opt/render/superslicer/superslicer_console
        FOUND=true
      else
        echo "🔍 Searching all extracted files..."
        find SuperSlicer-2.7.61.1-linux -type f -executable
        
        # Try to find any superslicer executable
        SUPERSLICER_FILE=$(find SuperSlicer-2.7.61.1-linux -name "*superslicer*" -type f | head -1)
        if [ -n "$SUPERSLICER_FILE" ]; then
          echo "✅ Found SuperSlicer executable: $SUPERSLICER_FILE"
          cp "$SUPERSLICER_FILE" /opt/render/superslicer/superslicer_console
          FOUND=true
        else
          # Try any executable file in the directory
          SUPERSLICER_FILE=$(find SuperSlicer-2.7.61.1-linux -type f -executable | head -1)
          if [ -n "$SUPERSLICER_FILE" ]; then
            echo "✅ Found executable file: $SUPERSLICER_FILE"
            cp "$SUPERSLICER_FILE" /opt/render/superslicer/superslicer_console
            FOUND=true
          fi
        fi
      fi
      
      if [ "$FOUND" = "true" ]; then
        echo "🔐 Setting executable permissions..."
        chmod +x /opt/render/superslicer/superslicer_console
        
        echo "✅ Verifying SuperSlicer installation..."
        ls -la /opt/render/superslicer/superslicer_console
        
        # Test if SuperSlicer can show help
        echo "🧪 Testing SuperSlicer..."
        if /opt/render/superslicer/superslicer_console --help >/dev/null 2>&1; then
          echo "✅ SuperSlicer is working correctly"
        elif /opt/render/superslicer/superslicer_console --version >/dev/null 2>&1; then
          echo "✅ SuperSlicer responds to version check"
        else
          echo "⚠️  SuperSlicer may not work properly, but file exists"
        fi
        
        echo "📋 Creating profiles directory..."
        mkdir -p /opt/render/project/src/profiles
        
      else
        echo "❌ SuperSlicer executable not found!"
        echo "📁 Contents of extracted directory:"
        ls -la SuperSlicer-2.7.61.1-linux/
        echo "📁 All files in extracted directory:"
        find SuperSlicer-2.7.61.1-linux -type f
        echo "⚠️  Continuing without SuperSlicer - app will use demo mode"
      fi
      
      echo "🚀 Build complete!"
      
    startCommand: gunicorn --bind 0.0.0.0:$PORT app:app --workers 2 --timeout 300 --max-requests 1000
    envVars:
      - key: SUPERSLICER_PATH
        value: /opt/render/superslicer/superslicer_console
      - key: COST_PER_HOUR
        value: "3.0"
      - key: DEBUG
        value: "False"
      - key: SECRET_KEY
        value: your-production-secret-key-change-this-in-production
